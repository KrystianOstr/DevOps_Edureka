---
- name: Build, Push Docker image, and Deploy to Kubernetes
  hosts: localhost
  become: yes
  vars:
    docker_image_name: "mrbadd/abc-retail-app"
    docker_image_tag: "{{ build_number }}"
    namespace: "abc-technologies"
    kubeconfig_path: "/home/ubuntu/.kube/config"

  tasks:
    - name: Docker Build
      command: docker build -t "{{ docker_image_name }}:{{ docker_image_tag }}" -t "{{ docker_image_name }}:latest" .
      args:
        chdir: "{{ lookup('env','WORKSPACE') }}"
      delegate_to: localhost

    - name: Docker Login
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"
        registry: "https://index.docker.io/v1/"
      delegate_to: localhost

    - name: Docker Push Tag
      command: docker push "{{ docker_image_name }}:{{ docker_image_tag }}"
      delegate_to: localhost

    - name: Docker Push Latest
      command: docker push "{{ docker_image_name }}:latest"
      delegate_to: localhost

    - name: Docker Logout
      community.docker.docker_login:
        registry: "https://index.docker.io/v1/"
        state: absent
      delegate_to: localhost

- name: Deploy to K8s via kubectl
  hosts: worker
  become: yes
  vars:
    docker_image_name: "mrbadd/abc-retail-app"
    docker_image_tag: "{{ build_number }}"
    namespace: "abc-technologies"
    kubeconfig_path: "/home/ubuntu/.kube/config"

  tasks:
    - name: Ensure namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ namespace }}"

    - name: Deploy Kubernetes Deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: abc-retail-deployment
            namespace: "{{ namespace }}"
            labels:
              app: abc-retail
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: abc-retail
            template:
              metadata:
                labels:
                  app: abc-retail
              spec:
                  containers:
                  - name: abc-retail-container
                    image: "{{ docker_image_name }}:{{ docker_image_tag }}"
                    ports:
                      - containerPort: 8080
                    resources:
                      requests:
                        cpu: "100m"
                        memory: "128Mi"
                      limits:
                        cpu: "500m"
                        memory: "256Mi"


    - name: Deploy Kubernetes Service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: abc-retail-service
            namespace: "{{ namespace }}"
          spec:
            selector:
              app: abc-retail
            ports:
              - protocol: TCP
                port: 8080
                targetPort: 8080
            type: NodePort

